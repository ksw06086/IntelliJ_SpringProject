<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

    <!-- 방법2. @Aspect 어노테이션을 이용한 AOP 설정 -->
    <bean id = "log" class="com.spring.aop.anotation.LogAop"/>
    <bean id = "work" class="com.spring.aop.anotation.Worker">
        <property name="part" value="돼지고기"/>
        <property name="name" value="김서우"/>
        <property name="msg" value="마알ㅇ러나렁"/>
    </bean>
    <bean id = "member" class="com.spring.aop.anotation.Member">
        <property name="id" value="kim"/>
        <property name="name" value="김서우"/>
        <property name="hobby" value="돼지고기 먹기"/>
        <property name="pwd" value="12345678"/>
    </bean>

    <!-- 1. proxy를 자동으로 객체생성
         2. @Aspect 어노테이션이 적용된 bean 객체를 Advice로 사용하낟.
    -->
    <aop:aspectj-autoproxy/>

</beans>
